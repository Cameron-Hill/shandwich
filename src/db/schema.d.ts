/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Comment {
  author: number;
  content: string;
  created_on: Generated<Timestamp>;
  id: Generated<number>;
  post: number;
}

export interface Follow {
  follow: number;
  user: number;
}

export interface Like {
  author: number;
  created_on: Generated<Timestamp>;
  id: Generated<number>;
  post: number;
}

export interface Post {
  author: number;
  created_on: Generated<Timestamp>;
  description: string;
  id: Generated<number>;
  image: string | null;
  rating: number;
  title: string;
}

export interface User {
  created_at: Generated<string>;
  id: Generated<number>;
  name: string;
  provider_id: string;
}

export interface DB {
  comment: Comment;
  follow: Follow;
  like: Like;
  post: Post;
  user: User;
}
